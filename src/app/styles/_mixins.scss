// Responsive mixin
@mixin responsiveByBreakPoint($breakpoint) {
  $breakpoints: (
    phone: 640px,
    tablet: 768px,
    desktop: 1024px,
    large-desktop: 1280px,
  );

  @media only screen and (min-width: map-get($breakpoints, $breakpoint)) {
    @content;
  }
}
// display flex mixin
@mixin flex(
  $alignItems: null,
  $justifyContent: null,
  $direction: null,
  $wrap: null,
  $gap: null
) {
  display: flex;
  align-items: $alignItems;
  justify-content: $justifyContent;
  flex-direction: $direction;
  flex-wrap: $wrap;
  gap: $gap;
}

@mixin typography($size: 14px, $weight: 400, $color: null) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
}

// grid mixin
@mixin grid(
  $alignItems: null,
  $justifyContent: null,
  $rows: null,
  $columns: null,
  $gap: null,
  $row-gap: null,
  $column-gap: null
) {
  display: grid;
  gap: $gap;
  row-gap: $row-gap;
  column-gap: $column-gap;
  grid-template-rows: $rows;
  grid-template-columns: $columns;
  align-items: $alignItems;
  justify-content: $justifyContent;
}

// animation keyframes
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// make animation
@mixin animate($animation, $duration, $method, $times, $animationDelay: null) {
  animation: $animation $duration $method $times;
  animation-delay: $animationDelay;
}
